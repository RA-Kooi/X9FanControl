// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required

namespace LibCapNG
{
    public enum CapngActT : uint
    {
        CAPNG_DROP = 0,
        CAPNG_ADD = 1
    }

    [Flags]
    public enum CapngTypeT : uint
    {
        CAPNG_EFFECTIVE = 1,
        CAPNG_PERMITTED = 2,
        CAPNG_INHERITABLE = 4,
        CAPNG_BOUNDING_SET = 8,
        CAPNG_AMBIENT = 16
    }

    public enum CapngSelectT : uint
    {
        CAPNG_SELECT_CAPS = 16,
        CAPNG_SELECT_BOUNDS = 32,
        CAPNG_SELECT_BOTH = 48,
        CAPNG_SELECT_AMBIENT = 64,
        CAPNG_SELECT_ALL = 112
    }

    public enum CapngResultsT
    {
        CAPNG_FAIL = -1,
        CAPNG_NONE = 0,
        CAPNG_PARTIAL = 1,
        CAPNG_FULL = 2
    }

    public enum CapngPrintT : uint
    {
        CAPNG_PRINT_STDOUT = 0,
        CAPNG_PRINT_BUFFER = 1
    }

    [Flags]
    public enum CapngFlagsT : uint
    {
        CAPNG_NO_FLAG = 0,
        CAPNG_DROP_SUPP_GRP = 1,
        CAPNG_CLEAR_BOUNDING = 2,
        CAPNG_INIT_SUPP_GRP = 4,
        CAPNG_CLEAR_AMBIENT = 8
    }

    public unsafe partial class cap_ng
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_clear", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CapngClear(global::LibCapNG.CapngSelectT set);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_fill", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CapngFill(global::LibCapNG.CapngSelectT set);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_setpid", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CapngSetpid(int pid);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_get_caps_process", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngGetCapsProcess();

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_update", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngUpdate(global::LibCapNG.CapngActT action, global::LibCapNG.CapngTypeT type, uint capability);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_updatev", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngUpdatev(global::LibCapNG.CapngActT action, global::LibCapNG.CapngTypeT type, uint capability);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_apply", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngApply(global::LibCapNG.CapngSelectT set);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_lock", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngLock();

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_change_id", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngChangeId(int uid, int gid, global::LibCapNG.CapngFlagsT flag);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_get_rootid", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngGetRootid();

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_set_rootid", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngSetRootid(int rootid);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_get_caps_fd", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngGetCapsFd(int fd);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_apply_caps_fd", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngApplyCapsFd(int fd);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_have_capabilities", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::LibCapNG.CapngResultsT CapngHaveCapabilities(global::LibCapNG.CapngSelectT set);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_have_permitted_capabilities", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::LibCapNG.CapngResultsT CapngHavePermittedCapabilities();

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_have_capability", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngHaveCapability(global::LibCapNG.CapngTypeT which, uint capability);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_print_caps_numeric", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* CapngPrintCapsNumeric(global::LibCapNG.CapngPrintT @where, global::LibCapNG.CapngSelectT set);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_print_caps_text", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* CapngPrintCapsText(global::LibCapNG.CapngPrintT @where, global::LibCapNG.CapngTypeT which);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_name_to_capability", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int CapngNameToCapability([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string name);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_capability_to_name", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr CapngCapabilityToName(uint capability);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_restore_state", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void CapngRestoreState(__IntPtr* state);

            [SuppressUnmanagedCodeSecurity, DllImport("cap-ng", EntryPoint = "capng_save_state", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr CapngSaveState();
        }

        public static void CapngClear(global::LibCapNG.CapngSelectT set)
        {
            __Internal.CapngClear(set);
        }

        public static void CapngFill(global::LibCapNG.CapngSelectT set)
        {
            __Internal.CapngFill(set);
        }

        public static void CapngSetpid(int pid)
        {
            __Internal.CapngSetpid(pid);
        }

        public static int CapngGetCapsProcess()
        {
            var ___ret = __Internal.CapngGetCapsProcess();
            return ___ret;
        }

        public static int CapngUpdate(global::LibCapNG.CapngActT action, global::LibCapNG.CapngTypeT type, uint capability)
        {
            var ___ret = __Internal.CapngUpdate(action, type, capability);
            return ___ret;
        }

        public static int CapngUpdatev(global::LibCapNG.CapngActT action, global::LibCapNG.CapngTypeT type, uint capability)
        {
            var ___ret = __Internal.CapngUpdatev(action, type, capability);
            return ___ret;
        }

        public static int CapngApply(global::LibCapNG.CapngSelectT set)
        {
            var ___ret = __Internal.CapngApply(set);
            return ___ret;
        }

        public static int CapngLock()
        {
            var ___ret = __Internal.CapngLock();
            return ___ret;
        }

        public static int CapngChangeId(int uid, int gid, global::LibCapNG.CapngFlagsT flag)
        {
            var ___ret = __Internal.CapngChangeId(uid, gid, flag);
            return ___ret;
        }

        public static int CapngGetRootid()
        {
            var ___ret = __Internal.CapngGetRootid();
            return ___ret;
        }

        public static int CapngSetRootid(int rootid)
        {
            var ___ret = __Internal.CapngSetRootid(rootid);
            return ___ret;
        }

        public static int CapngGetCapsFd(int fd)
        {
            var ___ret = __Internal.CapngGetCapsFd(fd);
            return ___ret;
        }

        public static int CapngApplyCapsFd(int fd)
        {
            var ___ret = __Internal.CapngApplyCapsFd(fd);
            return ___ret;
        }

        public static global::LibCapNG.CapngResultsT CapngHaveCapabilities(global::LibCapNG.CapngSelectT set)
        {
            var ___ret = __Internal.CapngHaveCapabilities(set);
            return ___ret;
        }

        public static global::LibCapNG.CapngResultsT CapngHavePermittedCapabilities()
        {
            var ___ret = __Internal.CapngHavePermittedCapabilities();
            return ___ret;
        }

        public static int CapngHaveCapability(global::LibCapNG.CapngTypeT which, uint capability)
        {
            var ___ret = __Internal.CapngHaveCapability(which, capability);
            return ___ret;
        }

        public static sbyte* CapngPrintCapsNumeric(global::LibCapNG.CapngPrintT @where, global::LibCapNG.CapngSelectT set)
        {
            var ___ret = __Internal.CapngPrintCapsNumeric(@where, set);
            return ___ret;
        }

        public static sbyte* CapngPrintCapsText(global::LibCapNG.CapngPrintT @where, global::LibCapNG.CapngTypeT which)
        {
            var ___ret = __Internal.CapngPrintCapsText(@where, which);
            return ___ret;
        }

        public static int CapngNameToCapability(string name)
        {
            var ___ret = __Internal.CapngNameToCapability(name);
            return ___ret;
        }

        public static string CapngCapabilityToName(uint capability)
        {
            var ___ret = __Internal.CapngCapabilityToName(capability);
            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, ___ret);
        }

        public static void CapngRestoreState(__IntPtr* state)
        {
            __Internal.CapngRestoreState(state);
        }

        public static __IntPtr CapngSaveState()
        {
            var ___ret = __Internal.CapngSaveState();
            return ___ret;
        }
    }
}
